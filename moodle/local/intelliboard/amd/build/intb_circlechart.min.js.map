{"version":3,"sources":["../src/intb_circlechart.js"],"names":["define","$","fn","extend","percentcircle","options","defaults","animate","diameter","guage","coverBg","bgColor","fillColor","percentSize","percentWeight","styles","cirContainer","cir","cirCover","percent","that","animateChart","stop","curr","$elm","deg","css","setTimeout","each","$this","real_number","data","perc","Math","round","$chart","replace","isNaN","max","find","append","parseInt"],"mappings":"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","sourcesContent":["define(['jquery'], function($) {\r\n    (function($){\r\n        $.fn.extend({\r\n            percentcircle: function(options) {\r\n                var defaults = {\r\n                    animate : true,\r\n                    diameter : 100,\r\n                    guage: 2,\r\n                    coverBg: '#fff',\r\n                    bgColor: '#efefef',\r\n                    fillColor: '#5c93c8',\r\n                    percentSize: '15px',\r\n                    percentWeight: 'normal'\r\n                };\r\n                defaults =  $.extend(defaults, options);\r\n                var\tstyles = {\r\n                    cirContainer : {\r\n                        'width':defaults.diameter,\r\n                        'height':defaults.diameter\r\n                    },\r\n                    cir : {\r\n                        'position': 'relative',\r\n                        'text-align': 'center',\r\n                        'width': defaults.diameter,\r\n                        'height': defaults.diameter,\r\n                        'border-radius': '100%',\r\n                        'background-color': defaults.bgColor,\r\n                        'background-image' : 'linear-gradient(91deg, transparent 50%, '+defaults.bgColor+' 50%), linear-gradient(90deg, '+defaults.bgColor+' 50%, transparent 50%)'\r\n                    },\r\n                    cirCover: {\r\n                        'position': 'relative',\r\n                        'top': defaults.guage,\r\n                        'left': defaults.guage,\r\n                        'text-align': 'center',\r\n                        'width': defaults.diameter - (defaults.guage * 2),\r\n                        'height': defaults.diameter - (defaults.guage * 2),\r\n                        'border-radius': '100%',\r\n                        'background-color': defaults.coverBg\r\n                    },\r\n                    percent: {\r\n                        'display':'block',\r\n                        'width': defaults.diameter,\r\n                        'height': defaults.diameter,\r\n                        'line-height': defaults.diameter + 'px',\r\n                        'vertical-align': 'middle',\r\n                        'font-size': defaults.percentSize,\r\n                        'font-weight': defaults.percentWeight,\r\n                        'color': defaults.fillColor\r\n                    }\r\n                };\r\n                var that = this,\r\n                    template = '<div><div class=\"ab\"><div class=\"cir\"><span class=\"perc\">{{percentage}}</span></div></div></div>';\r\n                function init(){\r\n                    that.each(function(){\r\n                        var $this = $(this),\r\n                            real_number = $this.data('percent'),\r\n                            perc = Math.round(real_number), //get the percentage from the element\r\n                            deg = perc * 3.6,\r\n                            stop = defaults.animate ? 0 : deg,\r\n                            $chart = $(template.replace('{{percentage}}',(isNaN(real_number))?real_number:Math.max(real_number, perc)+'%'));\r\n                        $chart.css(styles.cirContainer).find('.ab').css(styles.cir).find('.cir').css(styles.cirCover).find('.perc').css(styles.percent);\r\n\r\n                        $this.append($chart);\r\n                        setTimeout(function(){\r\n                            animateChart(deg,parseInt(stop),$chart.find('.ab')); //both values set to the same value to keep the function from looping and animating\r\n                        },250);\r\n                    });\r\n                }\r\n                var animateChart = function (stop,curr,$elm){\r\n                    var deg = curr;\r\n                    if(curr <= stop){\r\n                        if (deg>=180){\r\n                            $elm.css('background-image','linear-gradient(' + (90+deg) + 'deg, transparent 50%, '+defaults.fillColor+' 50%),linear-gradient(90deg, '+defaults.fillColor+' 50%, transparent 50%)');\r\n                        }else{\r\n                            $elm.css('background-image','linear-gradient(' + (deg-90) + 'deg, transparent 50%, '+defaults.bgColor+' 50%),linear-gradient(90deg, '+defaults.fillColor+' 50%, transparent 50%)');\r\n                        }\r\n                        curr ++;\r\n                        setTimeout(function(){\r\n                            animateChart(stop,curr,$elm);\r\n                        },1);\r\n                    }\r\n                };\r\n                init();\r\n            }\r\n        });\r\n    })($);\r\n});"],"file":"intb_circlechart.min.js"}